'\" t
.\"     Title: git-repack
.\"    Author: [see the "Author" section]
.\" Generator: DocBook XSL Stylesheets v1.75.2 <http://docbook.sf.net/>
.\"      Date: 04/06/2011
.\"    Manual: Git Manual
.\"    Source: Git 1.7.4.4
.\"  Language: English
.\"
.TH "GIT\-REPACK" "1" "04/06/2011" "Git 1\&.7\&.4\&.4" "Git Manual"
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
git-repack \- Pack unpacked objects in a repository
.SH "SYNOPSIS"
.sp
\fIgit repack\fR [\-a] [\-A] [\-d] [\-f] [\-F] [\-l] [\-n] [\-q] [\-\-window=<n>] [\-\-depth=<n>]
.SH "DESCRIPTION"
.sp
This script is used to combine all objects that do not currently reside in a "pack", into a pack\&. It can also be used to re\-organize existing packs into a single, more efficient pack\&.
.sp
A pack is a collection of objects, individually compressed, with delta compression applied, stored in a single file, with an associated index file\&.
.sp
Packs are used to reduce the load on mirror systems, backup engines, disk storage, etc\&.
.SH "OPTIONS"
.PP
\-a
.RS 4
Instead of incrementally packing the unpacked objects, pack everything referenced into a single pack\&. Especially useful when packing a repository that is used for private development\&. Use with
\fI\-d\fR\&. This will clean up the objects that
git prune
leaves behind, but
git fsck \-\-full
shows as dangling\&.
.sp
Note that users fetching over dumb protocols will have to fetch the whole new pack in order to get any contained object, no matter how many other objects in that pack they already have locally\&.
.RE
.PP
\-A
.RS 4
Same as
\-a, unless
\fI\-d\fR
is used\&. Then any unreachable objects in a previous pack become loose, unpacked objects, instead of being left in the old pack\&. Unreachable objects are never intentionally added to a pack, even when repacking\&. This option prevents unreachable objects from being immediately deleted by way of being left in the old pack and then removed\&. Instead, the loose unreachable objects will be pruned according to normal expiry rules with the next
\fIgit gc\fR
invocation\&. See
\fBgit-gc\fR(1)\&.
.RE
.PP
\-d
.RS 4
After packing, if the newly created packs make some existing packs redundant, remove the redundant packs\&. Also run
\fIgit prune\-packed\fR
to remove redundant loose object files\&.
.RE
.PP
\-l
.RS 4
Pass the
\-\-local
option to
\fIgit pack\-objects\fR\&. See
\fBgit-pack-objects\fR(1)\&.
.RE
.PP
\-f
.RS 4
Pass the
\-\-no\-reuse\-delta
option to
git\-pack\-objects, see
\fBgit-pack-objects\fR(1)\&.
.RE
.PP
\-F
.RS 4
Pass the
\-\-no\-reuse\-object
option to
git\-pack\-objects, see
\fBgit-pack-objects\fR(1)\&.
.RE
.PP
\-q
.RS 4
Pass the
\-q
option to
\fIgit pack\-objects\fR\&. See
\fBgit-pack-objects\fR(1)\&.
.RE
.PP
\-n
.RS 4
Do not update the server information with
\fIgit update\-server\-info\fR\&. This option skips updating local catalog files needed to publish this repository (or a direct copy of it) over HTTP or FTP\&. See
\fBgit-update-server-info\fR(1)\&.
.RE
.PP
\-\-window=<n>, \-\-depth=<n>
.RS 4
These two options affect how the objects contained in the pack are stored using delta compression\&. The objects are first internally sorted by type, size and optionally names and compared against the other objects within
\-\-window
to see if using delta compression saves space\&.
\-\-depth
limits the maximum delta depth; making it too deep affects the performance on the unpacker side, because delta data needs to be applied that many times to get to the necessary object\&. The default value for \-\-window is 10 and \-\-depth is 50\&.
.RE
.PP
\-\-window\-memory=<n>
.RS 4
This option provides an additional limit on top of
\-\-window; the window size will dynamically scale down so as to not take up more than
\fI<n>\fR
bytes in memory\&. This is useful in repositories with a mix of large and small objects to not run out of memory with a large window, but still be able to take advantage of the large window for the smaller objects\&. The size can be suffixed with "k", "m", or "g"\&.
\-\-window\-memory=0
makes memory usage unlimited, which is the default\&.
.RE
.PP
\-\-max\-pack\-size=<n>
.RS 4
Maximum size of each output pack file\&. The size can be suffixed with "k", "m", or "g"\&. The minimum size allowed is limited to 1 MiB\&. If specified, multiple packfiles may be created\&. The default is unlimited, unless the config variable
pack\&.packSizeLimit
is set\&.
.RE
.SH "CONFIGURATION"
.sp
By default, the command passes \-\-delta\-base\-offset option to \fIgit pack\-objects\fR; this typically results in slightly smaller packs, but the generated packs are incompatible with versions of Git older than version 1\&.4\&.4\&. If you need to share your repository with such ancient Git versions, either directly or via the dumb http or rsync protocol, then you need to set the configuration variable repack\&.UseDeltaBaseOffset to "false" and repack\&. Access from old Git versions over the native protocol is unaffected by this option as the conversion is performed on the fly as needed in that case\&.
.SH "AUTHOR"
.sp
Written by Linus Torvalds <\m[blue]\fBtorvalds@osdl\&.org\fR\m[]\&\s-2\u[1]\d\s+2>
.SH "DOCUMENTATION"
.sp
Documentation by Ryan Anderson <\m[blue]\fBryan@michonline\&.com\fR\m[]\&\s-2\u[2]\d\s+2>
.SH "SEE ALSO"
.sp
\fBgit-pack-objects\fR(1) \fBgit-prune-packed\fR(1)
.SH "GIT"
.sp
Part of the \fBgit\fR(1) suite
.SH "NOTES"
.IP " 1." 4
torvalds@osdl.org
.RS 4
\%mailto:torvalds@osdl.org
.RE
.IP " 2." 4
ryan@michonline.com
.RS 4
\%mailto:ryan@michonline.com
.RE
